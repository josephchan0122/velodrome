# Generated by Django 2.0.13 on 2020-11-30 12:45

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='AdvDeviceFirmwareModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_content', models.CharField(max_length=54)),
                ('binary', models.FileField(max_length=1024, storage=django.core.files.storage.FileSystemStorage(), upload_to='adv_device_firmwares')),
                ('firmware_type', models.IntegerField(choices=[(1, 'ANY_DEVICE'), (2, 'SANITIZING_STATION')], verbose_name='Firmware type')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adv_device_firmwares', related_query_name='adv_device_firmwares', to='lock8.Organization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'Advanced devices firmware',
                'db_table': 'velodrome_adv_device_firmware',
            },
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=64, verbose_name='SN')),
                ('device_type', models.IntegerField(choices=[(1, 'DISPENSER')], db_index=True, verbose_name='Device type')),
                ('status', models.IntegerField(choices=[(1, 'ACTIVE'), (2, 'OUT_OF_SERVICE')], verbose_name='System status')),
                ('firmware_type', models.IntegerField(choices=[(1, 'ANY_DEVICE'), (2, 'SANITIZING_STATION')], verbose_name='Firmware type')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adv_devices', related_query_name='adv_devices', to='lock8.Organization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'Advanced device',
                'db_table': 'velodrome_adv_device',
            },
        ),
        migrations.CreateModel(
            name='DeviceStateModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Datetime')),
                ('state_type', models.IntegerField(choices=[(1, 'LOCATION_CHANGED'), (2, 'BATTERY_STATUS'), (3, 'FLUID_STATUS'), (4, 'FIRMWARE_AVAILABLE'), (5, 'FIRMWARE_INSTALLED'), (6, 'DISPLAY_STATUS'), (7, 'SERVICED')], verbose_name='State type')),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, verbose_name='Attibutes')),
                ('value', models.DecimalField(decimal_places=3, default=0, max_digits=12, verbose_name='Decimal value')),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, default=None, null=True, srid=4326, verbose_name='Location (latitude, longitude)')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_history', related_query_name='state_history', to='advanced_devices.DeviceModel', verbose_name='Device')),
            ],
            options={
                'verbose_name': 'Advanced devices state',
                'db_table': 'velodrome_adv_device_state',
                'ordering': ['-created'],
            },
        ),
        migrations.AddIndex(
            model_name='devicemodel',
            index=models.Index(fields=['organization', 'serial_number'], name='velodrome_a_organiz_50aea9_idx'),
        ),
    ]
